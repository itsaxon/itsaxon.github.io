import{_ as i,c as a,a as n,o as l}from"./app-CGSH8WNO.js";const e={};function t(p,s){return l(),a("div",null,s[0]||(s[0]=[n(`<h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言"><span>前言</span></a></h2><p>2024年7月，华为发布了一款名为“仓颉”的编程语言，这一消息迅速在开发者圈子里引起了广泛的讨论。作为一个Java开发者，我也忍不住好奇，决定深入了解一下这个新语言。虽然仓颉才刚刚发布，但从官方文档到社区讨论，不难看出华为对它寄予厚望。那么，究竟什么是仓颉编程语言？它与我们熟悉的Java相比又有哪些不同之处呢？本文将通过具体代码示例，带大家一探究竟。</p><h2 id="什么是仓颉编程语言" tabindex="-1"><a class="header-anchor" href="#什么是仓颉编程语言"><span>什么是仓颉编程语言？</span></a></h2><p>仓颉编程语言是华为自研的一种高效、安全、现代化的编程语言，旨在满足新时代计算的多样化需求。仓颉语言在设计上注重简洁性和易用性，同时也兼顾了性能和安全性。特别是对于那些在分布式系统、AI、以及大数据领域工作的开发者，仓颉提供了一套全面而灵活的工具。</p><p>官方对仓颉的定位可以归纳为以下几点：</p><ol><li><strong>高效性</strong>：编译器优化和语言特性使得仓颉能够在性能上与C/C++相媲美。</li><li><strong>安全性</strong>：内置的安全检查机制减少了常见的编程错误，例如空指针异常和内存泄漏。</li><li><strong>现代化</strong>：支持并发、异步编程，以及多核处理器的优化，使其在现代应用场景中得心应手。</li></ol><h2 id="仓颉的代码示例" tabindex="-1"><a class="header-anchor" href="#仓颉的代码示例"><span>仓颉的代码示例</span></a></h2><p>说了这么多，大家肯定想看看仓颉到底长什么样子。我们先来看看一个经典的“Hello, World!”例子：</p><div class="language-cangjie line-numbers-mode" data-ext="cangjie" data-title="cangjie"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>fn main() {</span></span>
<span class="line"><span>    print(&quot;Hello, World!&quot;);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>是不是有点熟悉的感觉？确实，仓颉的语法设计非常简洁，尤其是对有编程经验的开发者来说，几乎不用学习成本。</p><p>我们再来看一个稍微复杂点的例子：计算一个整数数组的和。</p><div class="language-cangjie line-numbers-mode" data-ext="cangjie" data-title="cangjie"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>fn sumArray(arr: [int]) -&gt; int {</span></span>
<span class="line"><span>    mut sum = 0;</span></span>
<span class="line"><span>    for value in arr {</span></span>
<span class="line"><span>        sum += value;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    return sum;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>fn main() {</span></span>
<span class="line"><span>    let numbers = [1, 2, 3, 4, 5];</span></span>
<span class="line"><span>    let result = sumArray(numbers);</span></span>
<span class="line"><span>    print(&quot;Sum: &quot;, result);</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="与java的对比" tabindex="-1"><a class="header-anchor" href="#与java的对比"><span>与Java的对比</span></a></h3><p>作为一名Java开发者，看到这段代码，可能会不自觉地拿来和Java对比。那么，我用Java来实现同样的功能：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><button class="copy" title="复制代码" data-copied="已复制"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#5DA994;"> Main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> void</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> main</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">String</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> args</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        int</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> numbers</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;">1</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 2</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 3</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 4</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 5</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">};</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> sumArray</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">numbers</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        System</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">out</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">println</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">Sum: </span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> +</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> result</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> static</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> int</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> sumArray</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">[]</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> arr</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">        int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> sum</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#2F798A;--shiki-dark:#4C9A91;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        for</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> (</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">int</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> value</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> :</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> arr</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">            sum </span><span style="--shiki-light:#999999;--shiki-dark:#666666;">+=</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> value</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">        }</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">        return</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> sum</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>不同之处分析</strong>：</p><ol><li><p><strong>语法简洁性</strong>：仓颉的代码显得更加简洁，特别是在类型定义和函数声明方面，<code>fn</code> 和 <code>let</code> 这样的关键字让代码更容易阅读和理解。而Java需要显式地声明类型和函数返回值。</p></li><li><p><strong>可变变量声明</strong>：在仓颉中，<code>mut</code> 关键字用于声明可变变量，直观且安全。而在Java中，所有变量默认是可变的，这在某些情况下可能引发不可预见的错误。</p></li><li><p><strong>数组操作</strong>：仓颉中的数组操作显得更自然和直观，不需要明确的类型转换和边界检查，Java在这方面则显得稍显繁琐。</p></li></ol><h2 id="仓颉的优势与建议" tabindex="-1"><a class="header-anchor" href="#仓颉的优势与建议"><span>仓颉的优势与建议</span></a></h2><h3 id="优势" tabindex="-1"><a class="header-anchor" href="#优势"><span>优势</span></a></h3><ol><li><strong>更高的开发效率</strong>：对于日常开发中常见的任务，仓颉能让代码更简洁，减少了样板代码（boilerplate code）。</li><li><strong>更高的安全性</strong>：内置的空指针检查和数组边界检查，可以帮助开发者避免许多潜在的bug。</li><li><strong>并发支持</strong>：仓颉原生支持并发编程，使得开发分布式和并行应用程序更加容易。</li></ol><h3 id="建议" tabindex="-1"><a class="header-anchor" href="#建议"><span>建议</span></a></h3><p>如果你是一个Java开发者，想要尝试仓颉编程语言，我的建议是从一些简单的小项目开始，比如写一些实用的小工具或者脚本。仓颉的语法相对简单，你会很快上手，并且感受到它在开发效率上的提升。同时，深入了解仓颉的并发模型，将帮助你在多核和分布式环境中编写更高效的代码。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p>总的来说，仓颉编程语言的推出标志着华为在编程语言领域的又一突破。对于习惯了Java的开发者来说，仓颉提供了一种新的选择，它简洁而现代，特别适合用于现代分布式和并发应用开发。尽管目前的生态系统还不如Java那样成熟，但仓颉已经展示了其强大的潜力。</p><p>我个人在使用仓颉的过程中，最大的感受就是语言的设计者们真的为开发者考虑了很多，从语法的简洁性到安全机制的完善，都让人感受到一股清新之风。仓颉或许不能马上取代Java的地位，但它确实值得一试，尤其是当你追求更高的开发效率和更安全的代码时。</p><p><strong>写到最后</strong>，希望这篇文章能帮你对仓颉有一个初步的了解。如果你对这门语言感兴趣，不妨自己动手写几段代码，亲身感受一下它的魅力。</p>`,26)]))}const k=i(e,[["render",t],["__file","index.html.vue"]]),r=JSON.parse(`{"path":"/article/xavbknja/","title":"华为仓颉编程语言——从Java开发者的角度看它的优势与不同","lang":"zh-CN","frontmatter":{"title":"华为仓颉编程语言——从Java开发者的角度看它的优势与不同","author":"Leo Shuo","createTime":"2024/08/07 04:38:23","permalink":"/article/xavbknja/","head":[["script",{"id":"check-dark-mode"},"document.documentElement.classList.add('dark')"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"]]},"headers":[{"level":2,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":2,"title":"什么是仓颉编程语言？","slug":"什么是仓颉编程语言","link":"#什么是仓颉编程语言","children":[]},{"level":2,"title":"仓颉的代码示例","slug":"仓颉的代码示例","link":"#仓颉的代码示例","children":[{"level":3,"title":"与Java的对比","slug":"与java的对比","link":"#与java的对比","children":[]}]},{"level":2,"title":"仓颉的优势与建议","slug":"仓颉的优势与建议","link":"#仓颉的优势与建议","children":[{"level":3,"title":"优势","slug":"优势","link":"#优势","children":[]},{"level":3,"title":"建议","slug":"建议","link":"#建议","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"readingTime":{"minutes":4.53,"words":1358},"git":{"updatedTime":1723366338000,"contributors":[{"name":"itsaxon","email":"18856655661@163.com","commits":1}]},"filePathRelative":"Java/华为仓颉.md","categoryList":[{"id":"d52387","sort":10001,"name":"Java"}]}`);export{k as comp,r as data};
